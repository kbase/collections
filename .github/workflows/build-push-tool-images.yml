name: Build & Push Tool Image to GHCR

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths:
      - '.github/workflows/build-push-tool-images.yml'
      - 'src/loaders/compute_tools/**/Dockerfile'
  push:
    branches:
      - main
      - master
      - develop
    paths:
      - '.github/workflows/build-push-tool-images.yml'
      - 'src/loaders/compute_tools/**/Dockerfile'

jobs:
  build-push-tool-images:
    runs-on: ubuntu-latest
    steps:
      - name: Check out GitHub Repo
        uses: actions/checkout@v3

      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: '${{ secrets.GHCR_USERNAME }}'
          password: '${{ secrets.GHCR_TOKEN }}'

      - name: Run version monitor
        id: extract_version
        run: |
          current_version=$(python src/loaders/compute_tools/tool_version.py 'src/loaders/compute_tools/mash/versions.yaml')
          echo "{version}={$current_version}" >> $GITHUB_OUTPUT

      - name: Retrieve latest tool version
        id: extract_tool_version
        run: |
          tool_name="mash"
          current_version=$(python src/loaders/compute_tools/tool_version.py 'src/loaders/compute_tools/mash/versions.yaml')
          tool_version="${tool_name}_${current_version}"
          echo "{tool_version}={$tool_version}" >> $GITHUB_OUTPUT
          echo "Current tool version: $tool_version"

      - name: Build and push tool images
        id: build-and-push
        run: |
          tools=(
            mash)

          for tool in "${tools[@]}"; do
            dockerfile="./src/loaders/compute_tools/$tool/Dockerfile"
            tag="ghcr.io/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}:${{ steps.extract_tool_version.outputs.tool_version }}"

            echo "Building and pushing $tool image..."
            echo "tagging image with $tag"

            docker buildx build --file "$dockerfile" --tag "$tag" \
              --build-arg "BUILD_DATE=${{ steps.date.outputs.date }}" \
              --build-arg "VCS_REF=${{ github.sha }}" \
              --build-arg "BRANCH=${{ github.ref }}" \
              --build-arg "TAG=${{ github.ref }}" \
              --push .

          done